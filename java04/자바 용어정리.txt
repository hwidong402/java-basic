1. 기본형 데이터 4가지
-> 정수, 실수, 문자1, 논리

2. 참조형 변수란?
-> 기본형 변수가 아닌 것, 주소가 들어가 있는 변수
     기본형 데이터는 그 값이 저장이 되지만 참조형 데이터는 기본형이 아니기 때문에 주소가 저장이 된다.
     이 저장된 주소를 가르키기 위한 변수가 참조형 변수이다.

3. 클래스와 객체(object)을 비교, 예를 들어도 됨.
-> 클래스는 원형(틀), 객체는 클래스를 가지고 만든 인스턴스(실제)
     클래스는 일종의 틀이다. 붕어빵을 사먹을 때 놀랍게도 같은 모양의 붕어빵을 볼 수 있다. 이것이 가능한 이유는
     붕어빵을 만드는 틀이 있기때문이다. 이 틀로 만들어진 붕어빵은 팥 맛, 크림 맛, 피자 맛 등등 여러가지 맛이 있는데
     붕어빵 틀에서 만들어진 붕어빵을 객체라고 한다.

4. 객체지향방법은 어떤 방법?
-> 하드웨어 조립하듯이 객체를 조립하는 프로그래밍 방법
     일상생활에 쓰이는 물건처럼 만들어 사용한다. 예를 들어 손으로 빨래를 하게되면 절차가 매우 복잡하지만
     복잡한 절차를 하나로 통합해 '세탁기'라는 객체를 만든다면, '세탁기'에게 On 버튼을 눌러 '빨래 해'라고만
     명령하면 된다.

5. 필요한 부품(객체)를 얻는 방법 3가지
-> jdk내의 수많은 부품중에서 얻는다 허나 jdk 내에 없다면 MVN레포지토리라는 사이트에서 얻는다 그래도 없다면 내가 만들어 쓴다.

6. 클래스의 구성요소
-> 멤버 변수와 멤버 메서드

7. 멤버 변수와 멤버 메서드
-> 멤버 변수는 성질, 즉 외형적인 것을 정한다. 색깔, 크기, 사각형인지 육각형인지 등등
     멤버 메서드는 동작, 즉 기능을 뜻한다. 세탁기가 빨래를 하는 행위, 물을 받는 행위, 탈수를 하는 행위가 메서드이다.

8. Car클래스의 멤버변수가 int size, speed; Car c1 = new Car1(); 했을 때 변수는 몇개 만들어지나?
-> c1(main, stack영역), size(heap영역), speed(heap영역) 3개
     "int size", "int speed", "Car c1 = new Car();"  ==> 3개가 만들어진다.

9. 자바의 메모리 구조 3영역
-> 원본영역, 스택영역, 힙영역(T자형구조)
     참조형변수가 저장되는 Heap 영역, 기본형변수가 저장되는 Stack영역, Method영역이 있다.

10. 자바에서 메서드 이름 동일하게 해도 될까? 이 용어는?
-> 입력값에 따라 메서드를 구분해주기때문에 동일하게 해도 된다. 이것을 오버로딩(다형성)이라고 한다.

11. 메서드를 만들 때 고려사항 2가지
-> 입려값(파라메터), 반환값
     메서드를 만들 때 반환 값이 있는지 고려를 해야한다. 반환 값이 없을 때는 void를 적어주고
     반환 값이 있을 때는 void를 적으면 안되며, 반환 되는 타입(int, double, String 등)을 적어주어야한다.

12. void는 무슨 뜻?
-> 반환되는 값이 없다.

13. 메서드 이름이 동일한 경우 무엇을 가지고 호출할 때 메서드를 구분해줄까? 3가지
-> 입력값(파라메터)의 개수, 타입, 순서
     메서드 호출시 타입(int, double, String 등), 개수, 순서를 가지고 구분을 한다.